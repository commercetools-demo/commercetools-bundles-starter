{"version":3,"file":"8674.user-settings-menu.3f9615b6e87e9e50b70b.js","mappings":"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","sources":["webpack://@commercetools-us-ps/bundles-static/../../node_modules/@commercetools-frontend/application-shell/dist/use-applications-menu-03759eab.esm.js","webpack://@commercetools-us-ps/bundles-static/../../node_modules/@commercetools-uikit/avatar/dist/commercetools-uikit-avatar.esm.js","webpack://@commercetools-us-ps/bundles-static/../../node_modules/@commercetools-frontend/application-shell/dist/user-settings-menu-dcbb0bd3.esm.js","webpack://@commercetools-us-ps/bundles-static/../../node_modules/lodash/startCase.js"],"sourcesContent":["import _Object$keys from '@babel/runtime-corejs3/core-js-stable/object/keys';\nimport _Object$getOwnPropertySymbols from '@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols';\nimport _filterInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/filter';\nimport _Object$getOwnPropertyDescriptor from '@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor';\nimport _forEachInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/for-each';\nimport _Object$getOwnPropertyDescriptors from '@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors';\nimport _Object$defineProperties from '@babel/runtime-corejs3/core-js-stable/object/define-properties';\nimport _Object$defineProperty from '@babel/runtime-corejs3/core-js-stable/object/define-property';\nimport _slicedToArray from '@babel/runtime-corejs3/helpers/esm/slicedToArray';\nimport _defineProperty from '@babel/runtime-corejs3/helpers/esm/defineProperty';\nimport _mapInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/map';\nimport _findInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/find';\nimport _concatInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/concat';\nimport { useState, useEffect } from 'react';\nimport { useApolloClient } from '@apollo/client';\nimport { useApplicationContext, useMcQuery } from '@commercetools-frontend/application-shell-connectors';\nimport { getSupportedLocales } from '@commercetools-frontend/l10n';\n\nfunction ownKeys(e, r) { var t = _Object$keys(e); if (_Object$getOwnPropertySymbols) { var o = _Object$getOwnPropertySymbols(e); r && (o = _filterInstanceProperty(o).call(o, function (r) { return _Object$getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var _context4, _context5; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty(_context4 = ownKeys(Object(t), !0)).call(_context4, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors ? _Object$defineProperties(e, _Object$getOwnPropertyDescriptors(t)) : _forEachInstanceProperty(_context5 = ownKeys(Object(t))).call(_context5, function (r) { _Object$defineProperty(e, r, _Object$getOwnPropertyDescriptor(t, r)); }); } return e; }\nvar FetchApplicationsMenu = { kind: \"Document\", definitions: [{ kind: \"OperationDefinition\", operation: \"query\", name: { kind: \"Name\", value: \"FetchApplicationsMenu\" }, variableDefinitions: [], directives: [], selectionSet: { kind: \"SelectionSet\", selections: [{ kind: \"Field\", name: { kind: \"Name\", value: \"applicationsMenu\" }, arguments: [], directives: [], selectionSet: { kind: \"SelectionSet\", selections: [{ kind: \"Field\", name: { kind: \"Name\", value: \"appBar\" }, arguments: [], directives: [], selectionSet: { kind: \"SelectionSet\", selections: [{ kind: \"Field\", name: { kind: \"Name\", value: \"key\" }, arguments: [], directives: [] }, { kind: \"Field\", name: { kind: \"Name\", value: \"uriPath\" }, arguments: [], directives: [] }, { kind: \"Field\", name: { kind: \"Name\", value: \"labelAllLocales\" }, arguments: [], directives: [], selectionSet: { kind: \"SelectionSet\", selections: [{ kind: \"Field\", name: { kind: \"Name\", value: \"locale\" }, arguments: [], directives: [] }, { kind: \"Field\", name: { kind: \"Name\", value: \"value\" }, arguments: [], directives: [] }] } }, { kind: \"Field\", name: { kind: \"Name\", value: \"featureToggle\" }, arguments: [], directives: [] }, { kind: \"Field\", name: { kind: \"Name\", value: \"permissions\" }, arguments: [], directives: [] }] } }, { kind: \"Field\", name: { kind: \"Name\", value: \"navBarGroups\" }, arguments: [], directives: [], selectionSet: { kind: \"SelectionSet\", selections: [{ kind: \"Field\", name: { kind: \"Name\", value: \"key\" }, arguments: [], directives: [] }, { kind: \"Field\", name: { kind: \"Name\", value: \"items\" }, arguments: [], directives: [], selectionSet: { kind: \"SelectionSet\", selections: [{ kind: \"Field\", name: { kind: \"Name\", value: \"key\" }, arguments: [], directives: [] }, { kind: \"Field\", name: { kind: \"Name\", value: \"uriPath\" }, arguments: [], directives: [] }, { kind: \"Field\", name: { kind: \"Name\", value: \"icon\" }, arguments: [], directives: [] }, { kind: \"Field\", name: { kind: \"Name\", value: \"labelAllLocales\" }, arguments: [], directives: [], selectionSet: { kind: \"SelectionSet\", selections: [{ kind: \"Field\", name: { kind: \"Name\", value: \"locale\" }, arguments: [], directives: [] }, { kind: \"Field\", name: { kind: \"Name\", value: \"value\" }, arguments: [], directives: [] }] } }, { kind: \"Field\", name: { kind: \"Name\", value: \"featureToggle\" }, arguments: [], directives: [] }, { kind: \"Field\", name: { kind: \"Name\", value: \"menuVisibility\" }, arguments: [], directives: [] }, { kind: \"Field\", name: { kind: \"Name\", value: \"permissions\" }, arguments: [], directives: [] }, { kind: \"Field\", name: { kind: \"Name\", value: \"actionRights\" }, arguments: [], directives: [], selectionSet: { kind: \"SelectionSet\", selections: [{ kind: \"Field\", name: { kind: \"Name\", value: \"group\" }, arguments: [], directives: [] }, { kind: \"Field\", name: { kind: \"Name\", value: \"name\" }, arguments: [], directives: [] }] } }, { kind: \"Field\", name: { kind: \"Name\", value: \"dataFences\" }, arguments: [], directives: [], selectionSet: { kind: \"SelectionSet\", selections: [{ kind: \"Field\", name: { kind: \"Name\", value: \"group\" }, arguments: [], directives: [] }, { kind: \"Field\", name: { kind: \"Name\", value: \"name\" }, arguments: [], directives: [] }, { kind: \"Field\", name: { kind: \"Name\", value: \"type\" }, arguments: [], directives: [] }] } }, { kind: \"Field\", name: { kind: \"Name\", value: \"submenu\" }, arguments: [], directives: [], selectionSet: { kind: \"SelectionSet\", selections: [{ kind: \"Field\", name: { kind: \"Name\", value: \"key\" }, arguments: [], directives: [] }, { kind: \"Field\", name: { kind: \"Name\", value: \"uriPath\" }, arguments: [], directives: [] }, { kind: \"Field\", name: { kind: \"Name\", value: \"labelAllLocales\" }, arguments: [], directives: [], selectionSet: { kind: \"SelectionSet\", selections: [{ kind: \"Field\", name: { kind: \"Name\", value: \"locale\" }, arguments: [], directives: [] }, { kind: \"Field\", name: { kind: \"Name\", value: \"value\" }, arguments: [], directives: [] }] } }, { kind: \"Field\", name: { kind: \"Name\", value: \"featureToggle\" }, arguments: [], directives: [] }, { kind: \"Field\", name: { kind: \"Name\", value: \"menuVisibility\" }, arguments: [], directives: [] }, { kind: \"Field\", name: { kind: \"Name\", value: \"permissions\" }, arguments: [], directives: [] }, { kind: \"Field\", name: { kind: \"Name\", value: \"actionRights\" }, arguments: [], directives: [], selectionSet: { kind: \"SelectionSet\", selections: [{ kind: \"Field\", name: { kind: \"Name\", value: \"group\" }, arguments: [], directives: [] }, { kind: \"Field\", name: { kind: \"Name\", value: \"name\" }, arguments: [], directives: [] }] } }, { kind: \"Field\", name: { kind: \"Name\", value: \"dataFences\" }, arguments: [], directives: [], selectionSet: { kind: \"SelectionSet\", selections: [{ kind: \"Field\", name: { kind: \"Name\", value: \"group\" }, arguments: [], directives: [] }, { kind: \"Field\", name: { kind: \"Name\", value: \"name\" }, arguments: [], directives: [] }, { kind: \"Field\", name: { kind: \"Name\", value: \"type\" }, arguments: [], directives: [] }] } }] } }] } }] } }] } }] } }], loc: { start: 0, end: 939, source: { body: \"query FetchApplicationsMenu {\\n  applicationsMenu {\\n    appBar {\\n      key\\n      uriPath\\n      labelAllLocales {\\n        locale\\n        value\\n      }\\n      featureToggle\\n      permissions\\n    }\\n    navBarGroups {\\n      key\\n      items {\\n        key\\n        uriPath\\n        icon\\n        labelAllLocales {\\n          locale\\n          value\\n        }\\n        featureToggle\\n        menuVisibility\\n        permissions\\n        actionRights {\\n          group\\n          name\\n        }\\n        dataFences {\\n          group\\n          name\\n          type\\n        }\\n        submenu {\\n          key\\n          uriPath\\n          labelAllLocales {\\n            locale\\n            value\\n          }\\n          featureToggle\\n          menuVisibility\\n          permissions\\n          actionRights {\\n            group\\n            name\\n          }\\n          dataFences {\\n            group\\n            name\\n            type\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\n\", name: \"GraphQL request\", locationOffset: { line: 1, column: 1 } } } };\nconst defaultApiUrl = window.location.origin;\nconst mapLabelAllLocalesWithDefaults = (labelAllLocales, defaultLabel) => {\n  let mappedLabelAllLocales = labelAllLocales;\n  if (defaultLabel) {\n    var _context;\n    // Map all supported locales with the given localized labels.\n    // If a locale is not defined in the config, we use the `default` label as the value.\n    // This is only needed for development as we're trying to map two different schemas.\n    mappedLabelAllLocales = _mapInstanceProperty(_context = getSupportedLocales()).call(_context, supportedLocale => {\n      const existingField = _findInstanceProperty(labelAllLocales).call(labelAllLocales, field => field.locale === supportedLocale);\n      if (existingField) return existingField;\n      return {\n        locale: supportedLocale,\n        value: defaultLabel\n      };\n    });\n  }\n\n  // Add the `__typename`.\n  return _mapInstanceProperty(mappedLabelAllLocales).call(mappedLabelAllLocales, field => _objectSpread({\n    __typename: 'LocalizedField'\n  }, field));\n};\n/**\n * Transform menu links defined in the `custom-application-config.json` to the `FetchApplicationsMenu` schema.\n * This is only needed for development.\n */\nconst mapApplicationMenuConfigToGraqhQLQueryResult = applicationConfig => {\n  var _applicationConfig$__, _ref, _applicationConfig$__2, _menuLinks$featureTog, _menuLinks$menuVisibi, _menuLinks$actionRigh, _menuLinks$dataFences, _context2;\n  const entryPointUriPath = applicationConfig.entryPointUriPath;\n  const menuLinks = (_applicationConfig$__ = applicationConfig.__DEVELOPMENT__) === null || _applicationConfig$__ === void 0 ? void 0 : _applicationConfig$__.menuLinks;\n  // @ts-expect-error: the `accountLinks` is not explicitly typed as it's only used by the account app.\n  const accountLinks = (_ref = (_applicationConfig$__2 = applicationConfig.__DEVELOPMENT__) === null || _applicationConfig$__2 === void 0 ? void 0 : _applicationConfig$__2.accountLinks) !== null && _ref !== void 0 ? _ref : [];\n  return {\n    applicationsMenu: {\n      __typename: 'ApplicationsMenu',\n      navBarGroups: menuLinks ? [{\n        // for development, the navBarGroup key is set to '2' since all Custom Applications belong to the second Navbar group.\n        key: '2',\n        items: [{\n          __typename: 'NavbarMenu',\n          key: entryPointUriPath,\n          uriPath: entryPointUriPath,\n          icon: menuLinks.icon,\n          labelAllLocales: mapLabelAllLocalesWithDefaults(menuLinks.labelAllLocales, menuLinks.defaultLabel),\n          permissions: menuLinks.permissions,\n          // @ts-ignore: not defined in schema, as it's only used internally.\n          featureToggle: (_menuLinks$featureTog = menuLinks.featureToggle) !== null && _menuLinks$featureTog !== void 0 ? _menuLinks$featureTog : null,\n          // @ts-ignore: not defined in schema, as it's only used internally.\n          menuVisibility: (_menuLinks$menuVisibi = menuLinks.menuVisibility) !== null && _menuLinks$menuVisibi !== void 0 ? _menuLinks$menuVisibi : null,\n          // @ts-ignore: not defined in schema, as it's only used internally.\n          actionRights: (_menuLinks$actionRigh = menuLinks.actionRights) !== null && _menuLinks$actionRigh !== void 0 ? _menuLinks$actionRigh : null,\n          // @ts-ignore: not defined in schema, as it's only used internally.\n          dataFences: (_menuLinks$dataFences = menuLinks.dataFences) !== null && _menuLinks$dataFences !== void 0 ? _menuLinks$dataFences : null,\n          submenu: _mapInstanceProperty(_context2 = menuLinks.submenuLinks).call(_context2, submenuLink => {\n            var _context3, _submenuLink$featureT, _submenuLink$menuVisi, _submenuLink$actionRi, _submenuLink$dataFenc;\n            return {\n              __typename: 'BaseMenu',\n              key: _concatInstanceProperty(_context3 = \"\".concat(entryPointUriPath, \"-\")).call(_context3, submenuLink.uriPath),\n              uriPath: submenuLink.uriPath,\n              labelAllLocales: mapLabelAllLocalesWithDefaults(submenuLink.labelAllLocales, submenuLink.defaultLabel),\n              permissions: submenuLink.permissions,\n              // @ts-ignore: not defined in schema, as it's only used internally.\n              featureToggle: (_submenuLink$featureT = submenuLink.featureToggle) !== null && _submenuLink$featureT !== void 0 ? _submenuLink$featureT : null,\n              // @ts-ignore: not defined in schema, as it's only used internally.\n              menuVisibility: (_submenuLink$menuVisi = submenuLink.menuVisibility) !== null && _submenuLink$menuVisi !== void 0 ? _submenuLink$menuVisi : null,\n              // @ts-ignore: not defined in schema, as it's only used internally.\n              actionRights: (_submenuLink$actionRi = submenuLink.actionRights) !== null && _submenuLink$actionRi !== void 0 ? _submenuLink$actionRi : null,\n              // @ts-ignore: not defined in schema, as it's only used internally.\n              dataFences: (_submenuLink$dataFenc = submenuLink.dataFences) !== null && _submenuLink$dataFenc !== void 0 ? _submenuLink$dataFenc : null\n            };\n          })\n        }]\n      }] : [],\n      appBar: _mapInstanceProperty(accountLinks).call(accountLinks, menuLink => {\n        var _menuLink$featureTogg;\n        return {\n          __typename: 'BaseMenu',\n          key: menuLink.uriPath,\n          uriPath: menuLink.uriPath,\n          labelAllLocales: mapLabelAllLocalesWithDefaults(menuLink.labelAllLocales, menuLink.defaultLabel),\n          permissions: menuLink.permissions,\n          // @ts-ignore: not defined in schema, as it's only used internally.\n          featureToggle: (_menuLink$featureTogg = menuLink.featureToggle) !== null && _menuLink$featureTogg !== void 0 ? _menuLink$featureTogg : null\n        };\n      })\n    }\n  };\n};\nfunction useApplicationsMenu(menuKey, config) {\n  var _config$queryOptions;\n  const apolloClient = useApolloClient();\n  const mcProxyApiUrl = useApplicationContext(context => context.environment.mcProxyApiUrl);\n  const _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    hasWrittenToCache = _useState2[0],\n    setHasWrittenToCache = _useState2[1];\n\n  // Fetch all menu links from the GraphQL API in the Merchant Center Proxy.\n  // For local development, we don't fetch data from the remote server but use\n  // only the configuration for the menu links defined for the application.\n  // To do so, we manually write the data in the Apollo cache and use the\n  // `fetchPolicy: cache-only` to instruct Apollo to read the data from the cache.\n  // NOTE: In development, we skip the query as long as the data hasn't been written\n  // into the cache. If not, Apollo throws an error like\n  // `Can't find field 'applicationMenu' on ROOT_QUERY object`.\n  const _useMcQuery = useMcQuery(FetchApplicationsMenu, {\n      skip: config.environment.servedByProxy ?\n      // Production environment\n      false :\n      // Development environment\n      !hasWrittenToCache,\n      onError: (_config$queryOptions = config.queryOptions) === null || _config$queryOptions === void 0 ? void 0 : _config$queryOptions.onError,\n      fetchPolicy: config.environment.servedByProxy ? 'cache-first' : 'cache-only',\n      context: {\n        // Allow to overwrite the API url from application config\n        uri: \"\".concat(mcProxyApiUrl || defaultApiUrl, \"/api/graphql\"),\n        skipGraphQlTargetCheck: true\n      }\n    }),\n    menuQueryResult = _useMcQuery.data;\n\n  // For development, we read the menu data from the configuration file and\n  // write it into the Apollo cache.\n  useEffect(() => {\n    if (config.environment.__DEVELOPMENT__ && (config.environment.__DEVELOPMENT__.menuLinks ||\n    // @ts-expect-error: the `accountLinks` is not explicitly typed as it's only used by the account app.\n    config.environment.__DEVELOPMENT__.accountLinks) && !hasWrittenToCache) {\n      const applicationMenu = mapApplicationMenuConfigToGraqhQLQueryResult(config.environment);\n      apolloClient.writeQuery({\n        query: FetchApplicationsMenu,\n        data: applicationMenu\n      });\n      setHasWrittenToCache(true);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [hasWrittenToCache]); // Only subscribe to state changes.\n\n  if (menuQueryResult && menuQueryResult.applicationsMenu) {\n    return menuQueryResult.applicationsMenu[menuKey];\n  }\n  return;\n}\n\nexport { useApplicationsMenu as u };\n","import _defineProperty from '@babel/runtime-corejs3/helpers/esm/defineProperty';\nimport _pt from 'prop-types';\nimport _sliceInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/slice';\nimport _trimInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/trim';\nimport _concatInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/concat';\nimport _parseInt from '@babel/runtime-corejs3/core-js-stable/parse-int';\nimport _Object$keys from '@babel/runtime-corejs3/core-js-stable/object/keys';\nimport _Object$getOwnPropertySymbols from '@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols';\nimport _filterInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/filter';\nimport _Object$getOwnPropertyDescriptor from '@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor';\nimport _forEachInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/for-each';\nimport _Object$getOwnPropertyDescriptors from '@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors';\nimport _Object$defineProperties from '@babel/runtime-corejs3/core-js-stable/object/define-properties';\nimport _Object$defineProperty from '@babel/runtime-corejs3/core-js-stable/object/define-property';\nimport { cloneElement } from 'react';\nimport { css } from '@emotion/react';\nimport { filterDataAttributes } from '@commercetools-uikit/utils';\nimport { designTokens } from '@commercetools-uikit/design-system';\nimport startCase from 'lodash/startCase';\nimport { jsx, jsxs, Fragment } from '@emotion/react/jsx-runtime';\n\nconst fontSizeMap = {\n  s: {\n    narrow: designTokens.fontSize30,\n    wide: designTokens.fontSize10\n  },\n  m: {\n    narrow: designTokens.fontSize50,\n    wide: designTokens.fontSize30\n  },\n  l: {\n    narrow: designTokens.fontSize90,\n    wide: designTokens.fontSize80\n  }\n};\nconst widthSizeMap = {\n  s: '32px',\n  m: '40px',\n  l: '100px'\n};\nconst colorsMap = {\n  accent: {\n    normal: designTokens.colorAccent90,\n    highlighted: designTokens.colorAccent95\n  },\n  purple: {\n    normal: designTokens.colorPurple90,\n    highlighted: designTokens.colorPurple95\n  },\n  turquoise: {\n    normal: designTokens.colorTurquoise90,\n    highlighted: designTokens.colorTurquoise95\n  },\n  brown: {\n    normal: designTokens.colorBrown90,\n    highlighted: designTokens.colorBrown95\n  }\n};\nconst getFontSize = (avatarInitials, avatarSize) => {\n  const widthCode = avatarInitials.length > 1 ? 'wide' : 'narrow';\n  return fontSizeMap[avatarSize][widthCode];\n};\nconst getWidthSize = avatarSize => widthSizeMap[avatarSize];\nconst getBackgroundColor = function () {\n  let avatarColor = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'accent';\n  let isHighlighted = arguments.length > 1 ? arguments[1] : undefined;\n  return colorsMap[avatarColor][isHighlighted ? 'highlighted' : 'normal'];\n};\nconst getForegroundColor = avatarColor => {\n  return avatarColor === 'accent' ? designTokens.colorAccent40 : designTokens[\"color\".concat(startCase(avatarColor), \"50\")];\n};\nconst getAvatarStyles = avatarProps => {\n  const avatarSize = getWidthSize(avatarProps.size);\n  const backgroundColor = getBackgroundColor(avatarProps.color, avatarProps.isHighlighted);\n  const foregroundColor = getForegroundColor(avatarProps.color);\n  return /*#__PURE__*/css(\"align-items:center;background-color:\", backgroundColor, \";border-radius:100%;font-size:\", designTokens.fontSize30, \";font-weight:\", designTokens.fontWeight600, \";color:\", foregroundColor, \";display:flex;justify-content:center;overflow:hidden;position:relative;fill:\", foregroundColor, \";height:\", avatarSize, \";width:\", avatarSize, \";\" + (process.env.NODE_ENV === \"production\" ? \"\" : \";label:getAvatarStyles;\"), process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF2YXRhci5zdHlsZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNEVZIiwiZmlsZSI6ImF2YXRhci5zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkZXNpZ25Ub2tlbnMgfSBmcm9tICdAY29tbWVyY2V0b29scy11aWtpdC9kZXNpZ24tc3lzdGVtJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCBzdGFydENhc2UgZnJvbSAnbG9kYXNoL3N0YXJ0Q2FzZSc7XG5pbXBvcnQgeyBUQXZhdGFyUHJvcHMgfSBmcm9tICcuL2F2YXRhcic7XG5cbmNvbnN0IGZvbnRTaXplTWFwID0ge1xuICBzOiB7XG4gICAgbmFycm93OiBkZXNpZ25Ub2tlbnMuZm9udFNpemUzMCxcbiAgICB3aWRlOiBkZXNpZ25Ub2tlbnMuZm9udFNpemUxMCxcbiAgfSxcbiAgbToge1xuICAgIG5hcnJvdzogZGVzaWduVG9rZW5zLmZvbnRTaXplNTAsXG4gICAgd2lkZTogZGVzaWduVG9rZW5zLmZvbnRTaXplMzAsXG4gIH0sXG4gIGw6IHtcbiAgICBuYXJyb3c6IGRlc2lnblRva2Vucy5mb250U2l6ZTkwLFxuICAgIHdpZGU6IGRlc2lnblRva2Vucy5mb250U2l6ZTgwLFxuICB9LFxufTtcblxuY29uc3Qgd2lkdGhTaXplTWFwID0ge1xuICBzOiAnMzJweCcsXG4gIG06ICc0MHB4JyxcbiAgbDogJzEwMHB4Jyxcbn07XG5cbmNvbnN0IGNvbG9yc01hcCA9IHtcbiAgYWNjZW50OiB7XG4gICAgbm9ybWFsOiBkZXNpZ25Ub2tlbnMuY29sb3JBY2NlbnQ5MCxcbiAgICBoaWdobGlnaHRlZDogZGVzaWduVG9rZW5zLmNvbG9yQWNjZW50OTUsXG4gIH0sXG4gIHB1cnBsZToge1xuICAgIG5vcm1hbDogZGVzaWduVG9rZW5zLmNvbG9yUHVycGxlOTAsXG4gICAgaGlnaGxpZ2h0ZWQ6IGRlc2lnblRva2Vucy5jb2xvclB1cnBsZTk1LFxuICB9LFxuICB0dXJxdW9pc2U6IHtcbiAgICBub3JtYWw6IGRlc2lnblRva2Vucy5jb2xvclR1cnF1b2lzZTkwLFxuICAgIGhpZ2hsaWdodGVkOiBkZXNpZ25Ub2tlbnMuY29sb3JUdXJxdW9pc2U5NSxcbiAgfSxcbiAgYnJvd246IHtcbiAgICBub3JtYWw6IGRlc2lnblRva2Vucy5jb2xvckJyb3duOTAsXG4gICAgaGlnaGxpZ2h0ZWQ6IGRlc2lnblRva2Vucy5jb2xvckJyb3duOTUsXG4gIH0sXG59O1xuXG5leHBvcnQgY29uc3QgZ2V0Rm9udFNpemUgPSAoXG4gIGF2YXRhckluaXRpYWxzOiBzdHJpbmcsXG4gIGF2YXRhclNpemU6IFRBdmF0YXJQcm9wc1snc2l6ZSddXG4pID0+IHtcbiAgY29uc3Qgd2lkdGhDb2RlID0gYXZhdGFySW5pdGlhbHMubGVuZ3RoID4gMSA/ICd3aWRlJyA6ICduYXJyb3cnO1xuICByZXR1cm4gZm9udFNpemVNYXBbYXZhdGFyU2l6ZV1bd2lkdGhDb2RlXTtcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRXaWR0aFNpemUgPSAoYXZhdGFyU2l6ZTogVEF2YXRhclByb3BzWydzaXplJ10pID0+XG4gIHdpZHRoU2l6ZU1hcFthdmF0YXJTaXplXTtcblxuZXhwb3J0IGNvbnN0IGdldEJhY2tncm91bmRDb2xvciA9IChcbiAgYXZhdGFyQ29sb3I6IFRBdmF0YXJQcm9wc1snY29sb3InXSA9ICdhY2NlbnQnLFxuICBpc0hpZ2hsaWdodGVkOiBUQXZhdGFyUHJvcHNbJ2lzSGlnaGxpZ2h0ZWQnXVxuKSA9PiBjb2xvcnNNYXBbYXZhdGFyQ29sb3JdW2lzSGlnaGxpZ2h0ZWQgPyAnaGlnaGxpZ2h0ZWQnIDogJ25vcm1hbCddO1xuXG5leHBvcnQgY29uc3QgZ2V0Rm9yZWdyb3VuZENvbG9yID0gKGF2YXRhckNvbG9yOiBUQXZhdGFyUHJvcHNbJ2NvbG9yJ10pID0+IHtcbiAgcmV0dXJuIGF2YXRhckNvbG9yID09PSAnYWNjZW50J1xuICAgID8gZGVzaWduVG9rZW5zLmNvbG9yQWNjZW50NDBcbiAgICA6IGRlc2lnblRva2Vuc1tcbiAgICAgICAgYGNvbG9yJHtzdGFydENhc2UoYXZhdGFyQ29sb3IpfTUwYCBhcyBrZXlvZiB0eXBlb2YgZGVzaWduVG9rZW5zXG4gICAgICBdO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldEF2YXRhclN0eWxlcyA9IChhdmF0YXJQcm9wczogVEF2YXRhclByb3BzKSA9PiB7XG4gIGNvbnN0IGF2YXRhclNpemUgPSBnZXRXaWR0aFNpemUoYXZhdGFyUHJvcHMuc2l6ZSk7XG4gIGNvbnN0IGJhY2tncm91bmRDb2xvciA9IGdldEJhY2tncm91bmRDb2xvcihcbiAgICBhdmF0YXJQcm9wcy5jb2xvcixcbiAgICBhdmF0YXJQcm9wcy5pc0hpZ2hsaWdodGVkXG4gICk7XG4gIGNvbnN0IGZvcmVncm91bmRDb2xvciA9IGdldEZvcmVncm91bmRDb2xvcihhdmF0YXJQcm9wcy5jb2xvcik7XG4gIHJldHVybiBjc3NgXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2JhY2tncm91bmRDb2xvcn07XG4gICAgYm9yZGVyLXJhZGl1czogMTAwJTtcbiAgICBmb250LXNpemU6ICR7ZGVzaWduVG9rZW5zLmZvbnRTaXplMzB9O1xuICAgIGZvbnQtd2VpZ2h0OiAke2Rlc2lnblRva2Vucy5mb250V2VpZ2h0NjAwfTtcbiAgICBjb2xvcjogJHtmb3JlZ3JvdW5kQ29sb3J9O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZmlsbDogJHtmb3JlZ3JvdW5kQ29sb3J9O1xuXG4gICAgaGVpZ2h0OiAke2F2YXRhclNpemV9O1xuICAgIHdpZHRoOiAke2F2YXRhclNpemV9O1xuICBgO1xufTtcbiJdfQ== */\");\n};\n\nfunction ownKeys(e, r) { var t = _Object$keys(e); if (_Object$getOwnPropertySymbols) { var o = _Object$getOwnPropertySymbols(e); r && (o = _filterInstanceProperty(o).call(o, function (r) { return _Object$getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var _context4, _context5; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty(_context4 = ownKeys(Object(t), !0)).call(_context4, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors ? _Object$defineProperties(e, _Object$getOwnPropertyDescriptors(t)) : _forEachInstanceProperty(_context5 = ownKeys(Object(t))).call(_context5, function (r) { _Object$defineProperty(e, r, _Object$getOwnPropertyDescriptor(t, r)); }); } return e; }\nconst defaultProps = {\n  firstName: '',\n  lastName: '',\n  isHighlighted: false,\n  size: 's',\n  color: 'accent'\n};\nconst getFirstChar = str => {\n  var _context;\n  return typeof str === 'string' ? _sliceInstanceProperty(_context = _trimInstanceProperty(str).call(str)).call(_context, 0, 1).toUpperCase() : '';\n};\nconst getInitialsFromName = _ref => {\n  var _context2;\n  let _ref$firstName = _ref.firstName,\n    firstName = _ref$firstName === void 0 ? '' : _ref$firstName,\n    _ref$lastName = _ref.lastName,\n    lastName = _ref$lastName === void 0 ? '' : _ref$lastName;\n  return _concatInstanceProperty(_context2 = \"\".concat(getFirstChar(firstName))).call(_context2, getFirstChar(lastName));\n};\n/**\n * `s` - defines the size. We want a bigger one if the user is on a retina-display\n * `d` - defines the default if the user is not known to Gravatar. It returns a blank image,\n *        which let the initials underneath shine through\n *\n * @see: https://de.gravatar.com/site/implement/images/\n */\nconst createGravatarImgUrl = function (md5Hash, size) {\n  var _context3;\n  let multiplyBy = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  const imageSize = getWidthSize(size);\n  const sizeAsInt = _parseInt(imageSize.replace(/px$/, ''), 10);\n  const gravatarSize = sizeAsInt * multiplyBy;\n  return _concatInstanceProperty(_context3 = \"https://www.gravatar.com/avatar/\".concat(md5Hash, \"?s=\")).call(_context3, gravatarSize, \"&d=blank\");\n};\nconst GravatarImg = props => jsx(\"img\", {\n  css: /*#__PURE__*/css(\"background-position:center center;background-size:contain;position:relative;z-index:10;\", props.isHighlighted ? 'opacity: 0.7;' : '', \";\" + (process.env.NODE_ENV === \"production\" ? \"\" : \";label:GravatarImg;\"), process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF2YXRhci50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBeUZZIiwiZmlsZSI6ImF2YXRhci50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSZWFjdEVsZW1lbnQsIGNsb25lRWxlbWVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCB7IGZpbHRlckRhdGFBdHRyaWJ1dGVzIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvdXRpbHMnO1xuaW1wb3J0IHtcbiAgZ2V0QXZhdGFyU3R5bGVzLFxuICBnZXRGb250U2l6ZSxcbiAgZ2V0Rm9yZWdyb3VuZENvbG9yLFxuICBnZXRXaWR0aFNpemUsXG59IGZyb20gJy4vYXZhdGFyLnN0eWxlcyc7XG5cbmV4cG9ydCB0eXBlIFRBdmF0YXJQcm9wcyA9IHtcbiAgLyoqXG4gICAqIFRoZSBmaXJzdCBuYW1lIG9mIHRoZSB1c2VyLlxuICAgKi9cbiAgZmlyc3ROYW1lPzogc3RyaW5nO1xuICAvKipcbiAgICogVGhlIGxhc3QgbmFtZSBvZiB0aGUgdXNlci5cbiAgICovXG4gIGxhc3ROYW1lPzogc3RyaW5nO1xuICAvKipcbiAgICogVGhlIGhhc2hlZCBzdHJpbmcgb2YgdGhlIHVzZXIgZ3JhdmF0YXIuXG4gICAqL1xuICBncmF2YXRhckhhc2g6IHN0cmluZztcbiAgLyoqXG4gICAqIEVuaGFuY2VzIHRoZSBhcHBlYXJhbmNlIG9mIHRoZSBhdmF0YXIuXG4gICAqL1xuICBpc0hpZ2hsaWdodGVkPzogYm9vbGVhbjtcbiAgLyoqXG4gICAqIFRoZSBzaXplIG9mIHRoZSByZW5kZXJlZCBhdmF0YXIuXG4gICAqL1xuICBzaXplOiAncycgfCAnbScgfCAnbCc7XG4gIC8qKlxuICAgKiBUaGUgY29sb3Igb2YgdGhlIGF2YXRhci5cbiAgICovXG4gIGNvbG9yPzogJ2FjY2VudCcgfCAncHVycGxlJyB8ICd0dXJxdW9pc2UnIHwgJ2Jyb3duJztcbiAgLyoqIGFuIDxJY29uIC8+IGNvbXBvbmVudFxuICAgKi9cbiAgaWNvbj86IFJlYWN0RWxlbWVudDtcbn07XG5cbmV4cG9ydCB0eXBlIFRHcmF2YXRhckltZ1Byb3BzID0gUGljazxcbiAgVEF2YXRhclByb3BzLFxuICAnZ3JhdmF0YXJIYXNoJyB8ICdpc0hpZ2hsaWdodGVkJyB8ICdzaXplJ1xuPjtcblxuZXhwb3J0IHR5cGUgVEluaXRpYWxzUHJvcHMgPSBQaWNrPFxuICBUQXZhdGFyUHJvcHMsXG4gICdmaXJzdE5hbWUnIHwgJ2xhc3ROYW1lJyB8ICdzaXplJ1xuPjtcblxuY29uc3QgZGVmYXVsdFByb3BzOiBQaWNrPFxuICBUQXZhdGFyUHJvcHMsXG4gICdmaXJzdE5hbWUnIHwgJ2xhc3ROYW1lJyB8ICdpc0hpZ2hsaWdodGVkJyB8ICdzaXplJyB8ICdjb2xvcidcbj4gPSB7XG4gIGZpcnN0TmFtZTogJycsXG4gIGxhc3ROYW1lOiAnJyxcbiAgaXNIaWdobGlnaHRlZDogZmFsc2UsXG4gIHNpemU6ICdzJyxcbiAgY29sb3I6ICdhY2NlbnQnLFxufTtcblxuY29uc3QgZ2V0Rmlyc3RDaGFyID0gKHN0cjogc3RyaW5nKSA9PlxuICB0eXBlb2Ygc3RyID09PSAnc3RyaW5nJyA/IHN0ci50cmltKCkuc2xpY2UoMCwgMSkudG9VcHBlckNhc2UoKSA6ICcnO1xuXG5jb25zdCBnZXRJbml0aWFsc0Zyb21OYW1lID0gKHtcbiAgZmlyc3ROYW1lID0gJycsXG4gIGxhc3ROYW1lID0gJycsXG59OiBQaWNrPFRBdmF0YXJQcm9wcywgJ2ZpcnN0TmFtZScgfCAnbGFzdE5hbWUnPikgPT5cbiAgYCR7Z2V0Rmlyc3RDaGFyKGZpcnN0TmFtZSl9JHtnZXRGaXJzdENoYXIobGFzdE5hbWUpfWA7XG4vKipcbiAqIGBzYCAtIGRlZmluZXMgdGhlIHNpemUuIFdlIHdhbnQgYSBiaWdnZXIgb25lIGlmIHRoZSB1c2VyIGlzIG9uIGEgcmV0aW5hLWRpc3BsYXlcbiAqIGBkYCAtIGRlZmluZXMgdGhlIGRlZmF1bHQgaWYgdGhlIHVzZXIgaXMgbm90IGtub3duIHRvIEdyYXZhdGFyLiBJdCByZXR1cm5zIGEgYmxhbmsgaW1hZ2UsXG4gKiAgICAgICAgd2hpY2ggbGV0IHRoZSBpbml0aWFscyB1bmRlcm5lYXRoIHNoaW5lIHRocm91Z2hcbiAqXG4gKiBAc2VlOiBodHRwczovL2RlLmdyYXZhdGFyLmNvbS9zaXRlL2ltcGxlbWVudC9pbWFnZXMvXG4gKi9cbmNvbnN0IGNyZWF0ZUdyYXZhdGFySW1nVXJsID0gKFxuICBtZDVIYXNoOiBUQXZhdGFyUHJvcHNbJ2dyYXZhdGFySGFzaCddLFxuICBzaXplOiBUQXZhdGFyUHJvcHNbJ3NpemUnXSxcbiAgbXVsdGlwbHlCeTogbnVtYmVyID0gMVxuKSA9PiB7XG4gIGNvbnN0IGltYWdlU2l6ZSA9IGdldFdpZHRoU2l6ZShzaXplKTtcbiAgY29uc3Qgc2l6ZUFzSW50ID0gcGFyc2VJbnQoaW1hZ2VTaXplLnJlcGxhY2UoL3B4JC8sICcnKSwgMTApO1xuICBjb25zdCBncmF2YXRhclNpemUgPSBzaXplQXNJbnQgKiBtdWx0aXBseUJ5O1xuICByZXR1cm4gYGh0dHBzOi8vd3d3LmdyYXZhdGFyLmNvbS9hdmF0YXIvJHttZDVIYXNofT9zPSR7Z3JhdmF0YXJTaXplfSZkPWJsYW5rYDtcbn07XG5cbmNvbnN0IEdyYXZhdGFySW1nID0gKHByb3BzOiBUR3JhdmF0YXJJbWdQcm9wcykgPT4gKFxuICA8aW1nXG4gICAgY3NzPXtjc3NgXG4gICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xuICAgICAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgei1pbmRleDogMTA7XG5cbiAgICAgICR7cHJvcHMuaXNIaWdobGlnaHRlZCA/ICdvcGFjaXR5OiAwLjc7JyA6ICcnfVxuICAgIGB9XG4gICAgc3JjPXtjcmVhdGVHcmF2YXRhckltZ1VybChwcm9wcy5ncmF2YXRhckhhc2gsIHByb3BzLnNpemUpfVxuICAgIHNyY1NldD17W1xuICAgICAgYCR7Y3JlYXRlR3JhdmF0YXJJbWdVcmwocHJvcHMuZ3JhdmF0YXJIYXNoLCBwcm9wcy5zaXplKX0gMXhgLFxuICAgICAgYCR7Y3JlYXRlR3JhdmF0YXJJbWdVcmwocHJvcHMuZ3JhdmF0YXJIYXNoLCBwcm9wcy5zaXplLCAyKX0gMnhgLFxuICAgIF0uam9pbignLCcpfVxuICAgIC8qKlxuICAgICAqIEJhc2VkIG9uIGh0dHBzOi8vd3d3LnczLm9yZy9XQUkvdHV0b3JpYWxzL2ltYWdlcy9kZWNpc2lvbi10cmVlLzpcbiAgICAgKiBpbWFnZSBjb250cmlidXRlcyBtZWFuaW5nIHRvIHRoZSBjdXJyZW50IHBhZ2Ugb3IgY29udGV4dCBhbmQgaXQgc2hvd3MgY29udGVudCB0aGF0IGlzIHJlZHVuZGFudCB0byByZWFsIHRleHQgbmVhcmJ5XG4gICAgICovXG4gICAgYWx0PVwiXCJcbiAgLz5cbik7XG5HcmF2YXRhckltZy5kaXNwbGF5TmFtZSA9ICdHcmF2YXRhckltZyc7XG5cbmNvbnN0IEluaXRpYWxzID0gKHByb3BzOiBUSW5pdGlhbHNQcm9wcykgPT4ge1xuICBjb25zdCBpbml0aWFsc0Zyb21OYW1lID0gZ2V0SW5pdGlhbHNGcm9tTmFtZSh7XG4gICAgZmlyc3ROYW1lOiBwcm9wcy5maXJzdE5hbWUsXG4gICAgbGFzdE5hbWU6IHByb3BzLmxhc3ROYW1lLFxuICB9KTtcbiAgcmV0dXJuIChcbiAgICA8ZGl2XG4gICAgICBjc3M9e2Nzc2BcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBmb250LXNpemU6ICR7Z2V0Rm9udFNpemUoaW5pdGlhbHNGcm9tTmFtZSwgcHJvcHMuc2l6ZSl9O1xuICAgICAgYH1cbiAgICA+XG4gICAgICB7aW5pdGlhbHNGcm9tTmFtZX1cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5Jbml0aWFscy5kaXNwbGF5TmFtZSA9ICdJbml0aWFscyc7XG5cbmNvbnN0IEF2YXRhciA9IChwcm9wczogVEF2YXRhclByb3BzKSA9PiB7XG4gIGNvbnN0IGF2YXRhclNpemUgPSBnZXRXaWR0aFNpemUocHJvcHMuc2l6ZSk7XG4gIGNvbnN0IGZvcmVncm91bmRDb2xvciA9IGdldEZvcmVncm91bmRDb2xvcihwcm9wcy5jb2xvcik7XG4gIHJldHVybiAoXG4gICAgPGRpdiBjc3M9e2dldEF2YXRhclN0eWxlcyhwcm9wcyl9IHsuLi5maWx0ZXJEYXRhQXR0cmlidXRlcyhwcm9wcyl9PlxuICAgICAge3Byb3BzPy5pY29uID8gKFxuICAgICAgICA8ZGl2XG4gICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICBoZWlnaHQ6IGNhbGMoJHthdmF0YXJTaXplfSAtIDQ1JSk7XG4gICAgICAgICAgICB3aWR0aDogY2FsYygke2F2YXRhclNpemV9IC0gNDUlKTtcbiAgICAgICAgICBgfVxuICAgICAgICA+XG4gICAgICAgICAge2Nsb25lRWxlbWVudChwcm9wcz8uaWNvbiwge1xuICAgICAgICAgICAgc2l6ZTogJ3NjYWxlJyxcbiAgICAgICAgICAgIGNvbG9yOiBmb3JlZ3JvdW5kQ29sb3IsXG4gICAgICAgICAgICBiYWNrZ3JvdW5kY29sb3I6IGZvcmVncm91bmRDb2xvcixcbiAgICAgICAgICB9KX1cbiAgICAgICAgPC9kaXY+XG4gICAgICApIDogKFxuICAgICAgICA8PlxuICAgICAgICAgIDxHcmF2YXRhckltZ1xuICAgICAgICAgICAgZ3JhdmF0YXJIYXNoPXtwcm9wcy5ncmF2YXRhckhhc2h9XG4gICAgICAgICAgICBzaXplPXtwcm9wcy5zaXplfVxuICAgICAgICAgICAgaXNIaWdobGlnaHRlZD17cHJvcHMuaXNIaWdobGlnaHRlZH1cbiAgICAgICAgICAvPlxuICAgICAgICAgIDxJbml0aWFsc1xuICAgICAgICAgICAgc2l6ZT17cHJvcHMuc2l6ZX1cbiAgICAgICAgICAgIGZpcnN0TmFtZT17cHJvcHMuZmlyc3ROYW1lfVxuICAgICAgICAgICAgbGFzdE5hbWU9e3Byb3BzLmxhc3ROYW1lfVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvPlxuICAgICAgKX1cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5BdmF0YXIuZGlzcGxheU5hbWUgPSAnQXZhdGFyJztcbkF2YXRhci5kZWZhdWx0UHJvcHMgPSBkZWZhdWx0UHJvcHM7XG5cbmV4cG9ydCBkZWZhdWx0IEF2YXRhcjtcbiJdfQ== */\"),\n  src: createGravatarImgUrl(props.gravatarHash, props.size),\n  srcSet: [\"\".concat(createGravatarImgUrl(props.gravatarHash, props.size), \" 1x\"), \"\".concat(createGravatarImgUrl(props.gravatarHash, props.size, 2), \" 2x\")].join(',')\n  /**\n   * Based on https://www.w3.org/WAI/tutorials/images/decision-tree/:\n   * image contributes meaning to the current page or context and it shows content that is redundant to real text nearby\n   */,\n  alt: \"\"\n});\nGravatarImg.displayName = 'GravatarImg';\nconst Initials = props => {\n  const initialsFromName = getInitialsFromName({\n    firstName: props.firstName,\n    lastName: props.lastName\n  });\n  return jsx(\"div\", {\n    css: /*#__PURE__*/css(\"position:absolute;font-size:\", getFontSize(initialsFromName, props.size), \";\" + (process.env.NODE_ENV === \"production\" ? \"\" : \";label:Initials;\"), process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF2YXRhci50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBc0hjIiwiZmlsZSI6ImF2YXRhci50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSZWFjdEVsZW1lbnQsIGNsb25lRWxlbWVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCB7IGZpbHRlckRhdGFBdHRyaWJ1dGVzIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvdXRpbHMnO1xuaW1wb3J0IHtcbiAgZ2V0QXZhdGFyU3R5bGVzLFxuICBnZXRGb250U2l6ZSxcbiAgZ2V0Rm9yZWdyb3VuZENvbG9yLFxuICBnZXRXaWR0aFNpemUsXG59IGZyb20gJy4vYXZhdGFyLnN0eWxlcyc7XG5cbmV4cG9ydCB0eXBlIFRBdmF0YXJQcm9wcyA9IHtcbiAgLyoqXG4gICAqIFRoZSBmaXJzdCBuYW1lIG9mIHRoZSB1c2VyLlxuICAgKi9cbiAgZmlyc3ROYW1lPzogc3RyaW5nO1xuICAvKipcbiAgICogVGhlIGxhc3QgbmFtZSBvZiB0aGUgdXNlci5cbiAgICovXG4gIGxhc3ROYW1lPzogc3RyaW5nO1xuICAvKipcbiAgICogVGhlIGhhc2hlZCBzdHJpbmcgb2YgdGhlIHVzZXIgZ3JhdmF0YXIuXG4gICAqL1xuICBncmF2YXRhckhhc2g6IHN0cmluZztcbiAgLyoqXG4gICAqIEVuaGFuY2VzIHRoZSBhcHBlYXJhbmNlIG9mIHRoZSBhdmF0YXIuXG4gICAqL1xuICBpc0hpZ2hsaWdodGVkPzogYm9vbGVhbjtcbiAgLyoqXG4gICAqIFRoZSBzaXplIG9mIHRoZSByZW5kZXJlZCBhdmF0YXIuXG4gICAqL1xuICBzaXplOiAncycgfCAnbScgfCAnbCc7XG4gIC8qKlxuICAgKiBUaGUgY29sb3Igb2YgdGhlIGF2YXRhci5cbiAgICovXG4gIGNvbG9yPzogJ2FjY2VudCcgfCAncHVycGxlJyB8ICd0dXJxdW9pc2UnIHwgJ2Jyb3duJztcbiAgLyoqIGFuIDxJY29uIC8+IGNvbXBvbmVudFxuICAgKi9cbiAgaWNvbj86IFJlYWN0RWxlbWVudDtcbn07XG5cbmV4cG9ydCB0eXBlIFRHcmF2YXRhckltZ1Byb3BzID0gUGljazxcbiAgVEF2YXRhclByb3BzLFxuICAnZ3JhdmF0YXJIYXNoJyB8ICdpc0hpZ2hsaWdodGVkJyB8ICdzaXplJ1xuPjtcblxuZXhwb3J0IHR5cGUgVEluaXRpYWxzUHJvcHMgPSBQaWNrPFxuICBUQXZhdGFyUHJvcHMsXG4gICdmaXJzdE5hbWUnIHwgJ2xhc3ROYW1lJyB8ICdzaXplJ1xuPjtcblxuY29uc3QgZGVmYXVsdFByb3BzOiBQaWNrPFxuICBUQXZhdGFyUHJvcHMsXG4gICdmaXJzdE5hbWUnIHwgJ2xhc3ROYW1lJyB8ICdpc0hpZ2hsaWdodGVkJyB8ICdzaXplJyB8ICdjb2xvcidcbj4gPSB7XG4gIGZpcnN0TmFtZTogJycsXG4gIGxhc3ROYW1lOiAnJyxcbiAgaXNIaWdobGlnaHRlZDogZmFsc2UsXG4gIHNpemU6ICdzJyxcbiAgY29sb3I6ICdhY2NlbnQnLFxufTtcblxuY29uc3QgZ2V0Rmlyc3RDaGFyID0gKHN0cjogc3RyaW5nKSA9PlxuICB0eXBlb2Ygc3RyID09PSAnc3RyaW5nJyA/IHN0ci50cmltKCkuc2xpY2UoMCwgMSkudG9VcHBlckNhc2UoKSA6ICcnO1xuXG5jb25zdCBnZXRJbml0aWFsc0Zyb21OYW1lID0gKHtcbiAgZmlyc3ROYW1lID0gJycsXG4gIGxhc3ROYW1lID0gJycsXG59OiBQaWNrPFRBdmF0YXJQcm9wcywgJ2ZpcnN0TmFtZScgfCAnbGFzdE5hbWUnPikgPT5cbiAgYCR7Z2V0Rmlyc3RDaGFyKGZpcnN0TmFtZSl9JHtnZXRGaXJzdENoYXIobGFzdE5hbWUpfWA7XG4vKipcbiAqIGBzYCAtIGRlZmluZXMgdGhlIHNpemUuIFdlIHdhbnQgYSBiaWdnZXIgb25lIGlmIHRoZSB1c2VyIGlzIG9uIGEgcmV0aW5hLWRpc3BsYXlcbiAqIGBkYCAtIGRlZmluZXMgdGhlIGRlZmF1bHQgaWYgdGhlIHVzZXIgaXMgbm90IGtub3duIHRvIEdyYXZhdGFyLiBJdCByZXR1cm5zIGEgYmxhbmsgaW1hZ2UsXG4gKiAgICAgICAgd2hpY2ggbGV0IHRoZSBpbml0aWFscyB1bmRlcm5lYXRoIHNoaW5lIHRocm91Z2hcbiAqXG4gKiBAc2VlOiBodHRwczovL2RlLmdyYXZhdGFyLmNvbS9zaXRlL2ltcGxlbWVudC9pbWFnZXMvXG4gKi9cbmNvbnN0IGNyZWF0ZUdyYXZhdGFySW1nVXJsID0gKFxuICBtZDVIYXNoOiBUQXZhdGFyUHJvcHNbJ2dyYXZhdGFySGFzaCddLFxuICBzaXplOiBUQXZhdGFyUHJvcHNbJ3NpemUnXSxcbiAgbXVsdGlwbHlCeTogbnVtYmVyID0gMVxuKSA9PiB7XG4gIGNvbnN0IGltYWdlU2l6ZSA9IGdldFdpZHRoU2l6ZShzaXplKTtcbiAgY29uc3Qgc2l6ZUFzSW50ID0gcGFyc2VJbnQoaW1hZ2VTaXplLnJlcGxhY2UoL3B4JC8sICcnKSwgMTApO1xuICBjb25zdCBncmF2YXRhclNpemUgPSBzaXplQXNJbnQgKiBtdWx0aXBseUJ5O1xuICByZXR1cm4gYGh0dHBzOi8vd3d3LmdyYXZhdGFyLmNvbS9hdmF0YXIvJHttZDVIYXNofT9zPSR7Z3JhdmF0YXJTaXplfSZkPWJsYW5rYDtcbn07XG5cbmNvbnN0IEdyYXZhdGFySW1nID0gKHByb3BzOiBUR3JhdmF0YXJJbWdQcm9wcykgPT4gKFxuICA8aW1nXG4gICAgY3NzPXtjc3NgXG4gICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xuICAgICAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgei1pbmRleDogMTA7XG5cbiAgICAgICR7cHJvcHMuaXNIaWdobGlnaHRlZCA/ICdvcGFjaXR5OiAwLjc7JyA6ICcnfVxuICAgIGB9XG4gICAgc3JjPXtjcmVhdGVHcmF2YXRhckltZ1VybChwcm9wcy5ncmF2YXRhckhhc2gsIHByb3BzLnNpemUpfVxuICAgIHNyY1NldD17W1xuICAgICAgYCR7Y3JlYXRlR3JhdmF0YXJJbWdVcmwocHJvcHMuZ3JhdmF0YXJIYXNoLCBwcm9wcy5zaXplKX0gMXhgLFxuICAgICAgYCR7Y3JlYXRlR3JhdmF0YXJJbWdVcmwocHJvcHMuZ3JhdmF0YXJIYXNoLCBwcm9wcy5zaXplLCAyKX0gMnhgLFxuICAgIF0uam9pbignLCcpfVxuICAgIC8qKlxuICAgICAqIEJhc2VkIG9uIGh0dHBzOi8vd3d3LnczLm9yZy9XQUkvdHV0b3JpYWxzL2ltYWdlcy9kZWNpc2lvbi10cmVlLzpcbiAgICAgKiBpbWFnZSBjb250cmlidXRlcyBtZWFuaW5nIHRvIHRoZSBjdXJyZW50IHBhZ2Ugb3IgY29udGV4dCBhbmQgaXQgc2hvd3MgY29udGVudCB0aGF0IGlzIHJlZHVuZGFudCB0byByZWFsIHRleHQgbmVhcmJ5XG4gICAgICovXG4gICAgYWx0PVwiXCJcbiAgLz5cbik7XG5HcmF2YXRhckltZy5kaXNwbGF5TmFtZSA9ICdHcmF2YXRhckltZyc7XG5cbmNvbnN0IEluaXRpYWxzID0gKHByb3BzOiBUSW5pdGlhbHNQcm9wcykgPT4ge1xuICBjb25zdCBpbml0aWFsc0Zyb21OYW1lID0gZ2V0SW5pdGlhbHNGcm9tTmFtZSh7XG4gICAgZmlyc3ROYW1lOiBwcm9wcy5maXJzdE5hbWUsXG4gICAgbGFzdE5hbWU6IHByb3BzLmxhc3ROYW1lLFxuICB9KTtcbiAgcmV0dXJuIChcbiAgICA8ZGl2XG4gICAgICBjc3M9e2Nzc2BcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBmb250LXNpemU6ICR7Z2V0Rm9udFNpemUoaW5pdGlhbHNGcm9tTmFtZSwgcHJvcHMuc2l6ZSl9O1xuICAgICAgYH1cbiAgICA+XG4gICAgICB7aW5pdGlhbHNGcm9tTmFtZX1cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5Jbml0aWFscy5kaXNwbGF5TmFtZSA9ICdJbml0aWFscyc7XG5cbmNvbnN0IEF2YXRhciA9IChwcm9wczogVEF2YXRhclByb3BzKSA9PiB7XG4gIGNvbnN0IGF2YXRhclNpemUgPSBnZXRXaWR0aFNpemUocHJvcHMuc2l6ZSk7XG4gIGNvbnN0IGZvcmVncm91bmRDb2xvciA9IGdldEZvcmVncm91bmRDb2xvcihwcm9wcy5jb2xvcik7XG4gIHJldHVybiAoXG4gICAgPGRpdiBjc3M9e2dldEF2YXRhclN0eWxlcyhwcm9wcyl9IHsuLi5maWx0ZXJEYXRhQXR0cmlidXRlcyhwcm9wcyl9PlxuICAgICAge3Byb3BzPy5pY29uID8gKFxuICAgICAgICA8ZGl2XG4gICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICBoZWlnaHQ6IGNhbGMoJHthdmF0YXJTaXplfSAtIDQ1JSk7XG4gICAgICAgICAgICB3aWR0aDogY2FsYygke2F2YXRhclNpemV9IC0gNDUlKTtcbiAgICAgICAgICBgfVxuICAgICAgICA+XG4gICAgICAgICAge2Nsb25lRWxlbWVudChwcm9wcz8uaWNvbiwge1xuICAgICAgICAgICAgc2l6ZTogJ3NjYWxlJyxcbiAgICAgICAgICAgIGNvbG9yOiBmb3JlZ3JvdW5kQ29sb3IsXG4gICAgICAgICAgICBiYWNrZ3JvdW5kY29sb3I6IGZvcmVncm91bmRDb2xvcixcbiAgICAgICAgICB9KX1cbiAgICAgICAgPC9kaXY+XG4gICAgICApIDogKFxuICAgICAgICA8PlxuICAgICAgICAgIDxHcmF2YXRhckltZ1xuICAgICAgICAgICAgZ3JhdmF0YXJIYXNoPXtwcm9wcy5ncmF2YXRhckhhc2h9XG4gICAgICAgICAgICBzaXplPXtwcm9wcy5zaXplfVxuICAgICAgICAgICAgaXNIaWdobGlnaHRlZD17cHJvcHMuaXNIaWdobGlnaHRlZH1cbiAgICAgICAgICAvPlxuICAgICAgICAgIDxJbml0aWFsc1xuICAgICAgICAgICAgc2l6ZT17cHJvcHMuc2l6ZX1cbiAgICAgICAgICAgIGZpcnN0TmFtZT17cHJvcHMuZmlyc3ROYW1lfVxuICAgICAgICAgICAgbGFzdE5hbWU9e3Byb3BzLmxhc3ROYW1lfVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvPlxuICAgICAgKX1cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5BdmF0YXIuZGlzcGxheU5hbWUgPSAnQXZhdGFyJztcbkF2YXRhci5kZWZhdWx0UHJvcHMgPSBkZWZhdWx0UHJvcHM7XG5cbmV4cG9ydCBkZWZhdWx0IEF2YXRhcjtcbiJdfQ== */\"),\n    children: initialsFromName\n  });\n};\nInitials.displayName = 'Initials';\nconst Avatar = props => {\n  const avatarSize = getWidthSize(props.size);\n  const foregroundColor = getForegroundColor(props.color);\n  return jsx(\"div\", _objectSpread(_objectSpread({\n    css: getAvatarStyles(props)\n  }, filterDataAttributes(props)), {}, {\n    children: props !== null && props !== void 0 && props.icon ? jsx(\"div\", {\n      css: /*#__PURE__*/css(\"height:calc(\", avatarSize, \" - 45%);width:calc(\", avatarSize, \" - 45%);\" + (process.env.NODE_ENV === \"production\" ? \"\" : \";label:Avatar;\"), process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF2YXRhci50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBd0lrQiIsImZpbGUiOiJhdmF0YXIudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVhY3RFbGVtZW50LCBjbG9uZUVsZW1lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgeyBmaWx0ZXJEYXRhQXR0cmlidXRlcyB9IGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L3V0aWxzJztcbmltcG9ydCB7XG4gIGdldEF2YXRhclN0eWxlcyxcbiAgZ2V0Rm9udFNpemUsXG4gIGdldEZvcmVncm91bmRDb2xvcixcbiAgZ2V0V2lkdGhTaXplLFxufSBmcm9tICcuL2F2YXRhci5zdHlsZXMnO1xuXG5leHBvcnQgdHlwZSBUQXZhdGFyUHJvcHMgPSB7XG4gIC8qKlxuICAgKiBUaGUgZmlyc3QgbmFtZSBvZiB0aGUgdXNlci5cbiAgICovXG4gIGZpcnN0TmFtZT86IHN0cmluZztcbiAgLyoqXG4gICAqIFRoZSBsYXN0IG5hbWUgb2YgdGhlIHVzZXIuXG4gICAqL1xuICBsYXN0TmFtZT86IHN0cmluZztcbiAgLyoqXG4gICAqIFRoZSBoYXNoZWQgc3RyaW5nIG9mIHRoZSB1c2VyIGdyYXZhdGFyLlxuICAgKi9cbiAgZ3JhdmF0YXJIYXNoOiBzdHJpbmc7XG4gIC8qKlxuICAgKiBFbmhhbmNlcyB0aGUgYXBwZWFyYW5jZSBvZiB0aGUgYXZhdGFyLlxuICAgKi9cbiAgaXNIaWdobGlnaHRlZD86IGJvb2xlYW47XG4gIC8qKlxuICAgKiBUaGUgc2l6ZSBvZiB0aGUgcmVuZGVyZWQgYXZhdGFyLlxuICAgKi9cbiAgc2l6ZTogJ3MnIHwgJ20nIHwgJ2wnO1xuICAvKipcbiAgICogVGhlIGNvbG9yIG9mIHRoZSBhdmF0YXIuXG4gICAqL1xuICBjb2xvcj86ICdhY2NlbnQnIHwgJ3B1cnBsZScgfCAndHVycXVvaXNlJyB8ICdicm93bic7XG4gIC8qKiBhbiA8SWNvbiAvPiBjb21wb25lbnRcbiAgICovXG4gIGljb24/OiBSZWFjdEVsZW1lbnQ7XG59O1xuXG5leHBvcnQgdHlwZSBUR3JhdmF0YXJJbWdQcm9wcyA9IFBpY2s8XG4gIFRBdmF0YXJQcm9wcyxcbiAgJ2dyYXZhdGFySGFzaCcgfCAnaXNIaWdobGlnaHRlZCcgfCAnc2l6ZSdcbj47XG5cbmV4cG9ydCB0eXBlIFRJbml0aWFsc1Byb3BzID0gUGljazxcbiAgVEF2YXRhclByb3BzLFxuICAnZmlyc3ROYW1lJyB8ICdsYXN0TmFtZScgfCAnc2l6ZSdcbj47XG5cbmNvbnN0IGRlZmF1bHRQcm9wczogUGljazxcbiAgVEF2YXRhclByb3BzLFxuICAnZmlyc3ROYW1lJyB8ICdsYXN0TmFtZScgfCAnaXNIaWdobGlnaHRlZCcgfCAnc2l6ZScgfCAnY29sb3InXG4+ID0ge1xuICBmaXJzdE5hbWU6ICcnLFxuICBsYXN0TmFtZTogJycsXG4gIGlzSGlnaGxpZ2h0ZWQ6IGZhbHNlLFxuICBzaXplOiAncycsXG4gIGNvbG9yOiAnYWNjZW50Jyxcbn07XG5cbmNvbnN0IGdldEZpcnN0Q2hhciA9IChzdHI6IHN0cmluZykgPT5cbiAgdHlwZW9mIHN0ciA9PT0gJ3N0cmluZycgPyBzdHIudHJpbSgpLnNsaWNlKDAsIDEpLnRvVXBwZXJDYXNlKCkgOiAnJztcblxuY29uc3QgZ2V0SW5pdGlhbHNGcm9tTmFtZSA9ICh7XG4gIGZpcnN0TmFtZSA9ICcnLFxuICBsYXN0TmFtZSA9ICcnLFxufTogUGljazxUQXZhdGFyUHJvcHMsICdmaXJzdE5hbWUnIHwgJ2xhc3ROYW1lJz4pID0+XG4gIGAke2dldEZpcnN0Q2hhcihmaXJzdE5hbWUpfSR7Z2V0Rmlyc3RDaGFyKGxhc3ROYW1lKX1gO1xuLyoqXG4gKiBgc2AgLSBkZWZpbmVzIHRoZSBzaXplLiBXZSB3YW50IGEgYmlnZ2VyIG9uZSBpZiB0aGUgdXNlciBpcyBvbiBhIHJldGluYS1kaXNwbGF5XG4gKiBgZGAgLSBkZWZpbmVzIHRoZSBkZWZhdWx0IGlmIHRoZSB1c2VyIGlzIG5vdCBrbm93biB0byBHcmF2YXRhci4gSXQgcmV0dXJucyBhIGJsYW5rIGltYWdlLFxuICogICAgICAgIHdoaWNoIGxldCB0aGUgaW5pdGlhbHMgdW5kZXJuZWF0aCBzaGluZSB0aHJvdWdoXG4gKlxuICogQHNlZTogaHR0cHM6Ly9kZS5ncmF2YXRhci5jb20vc2l0ZS9pbXBsZW1lbnQvaW1hZ2VzL1xuICovXG5jb25zdCBjcmVhdGVHcmF2YXRhckltZ1VybCA9IChcbiAgbWQ1SGFzaDogVEF2YXRhclByb3BzWydncmF2YXRhckhhc2gnXSxcbiAgc2l6ZTogVEF2YXRhclByb3BzWydzaXplJ10sXG4gIG11bHRpcGx5Qnk6IG51bWJlciA9IDFcbikgPT4ge1xuICBjb25zdCBpbWFnZVNpemUgPSBnZXRXaWR0aFNpemUoc2l6ZSk7XG4gIGNvbnN0IHNpemVBc0ludCA9IHBhcnNlSW50KGltYWdlU2l6ZS5yZXBsYWNlKC9weCQvLCAnJyksIDEwKTtcbiAgY29uc3QgZ3JhdmF0YXJTaXplID0gc2l6ZUFzSW50ICogbXVsdGlwbHlCeTtcbiAgcmV0dXJuIGBodHRwczovL3d3dy5ncmF2YXRhci5jb20vYXZhdGFyLyR7bWQ1SGFzaH0/cz0ke2dyYXZhdGFyU2l6ZX0mZD1ibGFua2A7XG59O1xuXG5jb25zdCBHcmF2YXRhckltZyA9IChwcm9wczogVEdyYXZhdGFySW1nUHJvcHMpID0+IChcbiAgPGltZ1xuICAgIGNzcz17Y3NzYFxuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIHotaW5kZXg6IDEwO1xuXG4gICAgICAke3Byb3BzLmlzSGlnaGxpZ2h0ZWQgPyAnb3BhY2l0eTogMC43OycgOiAnJ31cbiAgICBgfVxuICAgIHNyYz17Y3JlYXRlR3JhdmF0YXJJbWdVcmwocHJvcHMuZ3JhdmF0YXJIYXNoLCBwcm9wcy5zaXplKX1cbiAgICBzcmNTZXQ9e1tcbiAgICAgIGAke2NyZWF0ZUdyYXZhdGFySW1nVXJsKHByb3BzLmdyYXZhdGFySGFzaCwgcHJvcHMuc2l6ZSl9IDF4YCxcbiAgICAgIGAke2NyZWF0ZUdyYXZhdGFySW1nVXJsKHByb3BzLmdyYXZhdGFySGFzaCwgcHJvcHMuc2l6ZSwgMil9IDJ4YCxcbiAgICBdLmpvaW4oJywnKX1cbiAgICAvKipcbiAgICAgKiBCYXNlZCBvbiBodHRwczovL3d3dy53My5vcmcvV0FJL3R1dG9yaWFscy9pbWFnZXMvZGVjaXNpb24tdHJlZS86XG4gICAgICogaW1hZ2UgY29udHJpYnV0ZXMgbWVhbmluZyB0byB0aGUgY3VycmVudCBwYWdlIG9yIGNvbnRleHQgYW5kIGl0IHNob3dzIGNvbnRlbnQgdGhhdCBpcyByZWR1bmRhbnQgdG8gcmVhbCB0ZXh0IG5lYXJieVxuICAgICAqL1xuICAgIGFsdD1cIlwiXG4gIC8+XG4pO1xuR3JhdmF0YXJJbWcuZGlzcGxheU5hbWUgPSAnR3JhdmF0YXJJbWcnO1xuXG5jb25zdCBJbml0aWFscyA9IChwcm9wczogVEluaXRpYWxzUHJvcHMpID0+IHtcbiAgY29uc3QgaW5pdGlhbHNGcm9tTmFtZSA9IGdldEluaXRpYWxzRnJvbU5hbWUoe1xuICAgIGZpcnN0TmFtZTogcHJvcHMuZmlyc3ROYW1lLFxuICAgIGxhc3ROYW1lOiBwcm9wcy5sYXN0TmFtZSxcbiAgfSk7XG4gIHJldHVybiAoXG4gICAgPGRpdlxuICAgICAgY3NzPXtjc3NgXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgZm9udC1zaXplOiAke2dldEZvbnRTaXplKGluaXRpYWxzRnJvbU5hbWUsIHByb3BzLnNpemUpfTtcbiAgICAgIGB9XG4gICAgPlxuICAgICAge2luaXRpYWxzRnJvbU5hbWV9XG4gICAgPC9kaXY+XG4gICk7XG59O1xuSW5pdGlhbHMuZGlzcGxheU5hbWUgPSAnSW5pdGlhbHMnO1xuXG5jb25zdCBBdmF0YXIgPSAocHJvcHM6IFRBdmF0YXJQcm9wcykgPT4ge1xuICBjb25zdCBhdmF0YXJTaXplID0gZ2V0V2lkdGhTaXplKHByb3BzLnNpemUpO1xuICBjb25zdCBmb3JlZ3JvdW5kQ29sb3IgPSBnZXRGb3JlZ3JvdW5kQ29sb3IocHJvcHMuY29sb3IpO1xuICByZXR1cm4gKFxuICAgIDxkaXYgY3NzPXtnZXRBdmF0YXJTdHlsZXMocHJvcHMpfSB7Li4uZmlsdGVyRGF0YUF0dHJpYnV0ZXMocHJvcHMpfT5cbiAgICAgIHtwcm9wcz8uaWNvbiA/IChcbiAgICAgICAgPGRpdlxuICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgaGVpZ2h0OiBjYWxjKCR7YXZhdGFyU2l6ZX0gLSA0NSUpO1xuICAgICAgICAgICAgd2lkdGg6IGNhbGMoJHthdmF0YXJTaXplfSAtIDQ1JSk7XG4gICAgICAgICAgYH1cbiAgICAgICAgPlxuICAgICAgICAgIHtjbG9uZUVsZW1lbnQocHJvcHM/Lmljb24sIHtcbiAgICAgICAgICAgIHNpemU6ICdzY2FsZScsXG4gICAgICAgICAgICBjb2xvcjogZm9yZWdyb3VuZENvbG9yLFxuICAgICAgICAgICAgYmFja2dyb3VuZGNvbG9yOiBmb3JlZ3JvdW5kQ29sb3IsXG4gICAgICAgICAgfSl9XG4gICAgICAgIDwvZGl2PlxuICAgICAgKSA6IChcbiAgICAgICAgPD5cbiAgICAgICAgICA8R3JhdmF0YXJJbWdcbiAgICAgICAgICAgIGdyYXZhdGFySGFzaD17cHJvcHMuZ3JhdmF0YXJIYXNofVxuICAgICAgICAgICAgc2l6ZT17cHJvcHMuc2l6ZX1cbiAgICAgICAgICAgIGlzSGlnaGxpZ2h0ZWQ9e3Byb3BzLmlzSGlnaGxpZ2h0ZWR9XG4gICAgICAgICAgLz5cbiAgICAgICAgICA8SW5pdGlhbHNcbiAgICAgICAgICAgIHNpemU9e3Byb3BzLnNpemV9XG4gICAgICAgICAgICBmaXJzdE5hbWU9e3Byb3BzLmZpcnN0TmFtZX1cbiAgICAgICAgICAgIGxhc3ROYW1lPXtwcm9wcy5sYXN0TmFtZX1cbiAgICAgICAgICAvPlxuICAgICAgICA8Lz5cbiAgICAgICl9XG4gICAgPC9kaXY+XG4gICk7XG59O1xuQXZhdGFyLmRpc3BsYXlOYW1lID0gJ0F2YXRhcic7XG5BdmF0YXIuZGVmYXVsdFByb3BzID0gZGVmYXVsdFByb3BzO1xuXG5leHBvcnQgZGVmYXVsdCBBdmF0YXI7XG4iXX0= */\"),\n      children: /*#__PURE__*/cloneElement(props === null || props === void 0 ? void 0 : props.icon, {\n        size: 'scale',\n        color: foregroundColor,\n        backgroundcolor: foregroundColor\n      })\n    }) : jsxs(Fragment, {\n      children: [jsx(GravatarImg, {\n        gravatarHash: props.gravatarHash,\n        size: props.size,\n        isHighlighted: props.isHighlighted\n      }), jsx(Initials, {\n        size: props.size,\n        firstName: props.firstName,\n        lastName: props.lastName\n      })]\n    })\n  }));\n};\nAvatar.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  firstName: _pt.string,\n  lastName: _pt.string,\n  gravatarHash: _pt.string.isRequired,\n  isHighlighted: _pt.bool,\n  size: _pt.oneOf(['s', 'm', 'l']).isRequired,\n  color: _pt.oneOf(['accent', 'purple', 'turquoise', 'brown']),\n  icon: _pt.element\n} : {};\nAvatar.displayName = 'Avatar';\nAvatar.defaultProps = defaultProps;\nvar Avatar$1 = Avatar;\n\n// NOTE: This string will be replaced on build time with the package version.\nvar version = \"18.2.0\";\n\nexport { Avatar$1 as default, version };\n","import _Object$keys from '@babel/runtime-corejs3/core-js-stable/object/keys';\nimport _Object$getOwnPropertySymbols from '@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols';\nimport _filterInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/filter';\nimport _Object$getOwnPropertyDescriptor from '@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor';\nimport _forEachInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/for-each';\nimport _Object$getOwnPropertyDescriptors from '@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors';\nimport _Object$defineProperties from '@babel/runtime-corejs3/core-js-stable/object/define-properties';\nimport _Object$defineProperty from '@babel/runtime-corejs3/core-js-stable/object/define-property';\nimport _defineProperty from '@babel/runtime-corejs3/helpers/esm/defineProperty';\nimport _slicedToArray from '@babel/runtime-corejs3/helpers/esm/slicedToArray';\nimport _styled from '@emotion/styled/base';\nimport _pt from 'prop-types';\nimport _findInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/find';\nimport _startsWithInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/starts-with';\nimport _trimInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/trim';\nimport _mapInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/map';\nimport { useState, useCallback, useRef, useEffect } from 'react';\nimport { css } from '@emotion/react';\nimport { ToggleFeature } from '@flopflip/react-broadcast';\nimport Downshift from 'downshift';\nimport { defineMessages, useIntl, FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { useApplicationContext } from '@commercetools-frontend/application-shell-connectors';\nimport { SUPPORT_PORTAL_URL, LOGOUT_REASONS, NO_VALUE_FALLBACK } from '@commercetools-frontend/constants';\nimport { reportErrorToSentry } from '@commercetools-frontend/sentry';\nimport AccessibleHidden from '@commercetools-uikit/accessible-hidden';\nimport Avatar from '@commercetools-uikit/avatar';\nimport { designTokens } from '@commercetools-uikit/design-system';\nimport Spacings from '@commercetools-uikit/spacings';\nimport Text from '@commercetools-uikit/text';\nimport { D as DIMENSIONS } from './oidc-ff53dfd3.esm.js';\nimport { u as useApplicationsMenu } from './use-applications-menu-03759eab.esm.js';\nimport { jsx, jsxs, Fragment } from '@emotion/react/jsx-runtime';\nimport '@babel/runtime-corejs3/core-js-stable/instance/concat';\nimport '@apollo/client';\nimport '@commercetools-frontend/l10n';\n\nvar messages = defineMessages({\n  support: {\n    id: 'UserSettingsMenu.support',\n    description: 'The label for Support',\n    defaultMessage: 'Support'\n  },\n  logout: {\n    id: 'UserSettingsMenu.logout',\n    description: 'The label for logout option',\n    defaultMessage: 'Logout'\n  },\n  privacyPolicy: {\n    id: 'UserSettingsMenu.privacyPolicy',\n    description: 'The label for privacy policy option',\n    defaultMessage: 'Privacy Policy'\n  },\n  menuLabel: {\n    id: 'UserSettingsMenu.menuLabel',\n    description: 'The label describing the menu',\n    defaultMessage: 'User settings menu'\n  },\n  openMenuLabel: {\n    id: 'UserSettingsMenu.openMenuLabel',\n    description: 'The label when menu is closed and would be opened by a click',\n    defaultMessage: 'Open user settings menu'\n  },\n  closeMenuLabel: {\n    id: 'UserSettingsMenu.closeMenuLabel',\n    description: 'The label when menu is open and would be closed by a click',\n    defaultMessage: 'Close user settings menu'\n  }\n});\n\nfunction ownKeys(e, r) { var t = _Object$keys(e); if (_Object$getOwnPropertySymbols) { var o = _Object$getOwnPropertySymbols(e); r && (o = _filterInstanceProperty(o).call(o, function (r) { return _Object$getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var _context3, _context4; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty(_context3 = ownKeys(Object(t), !0)).call(_context3, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors ? _Object$defineProperties(e, _Object$getOwnPropertyDescriptors(t)) : _forEachInstanceProperty(_context4 = ownKeys(Object(t))).call(_context4, function (r) { _Object$defineProperty(e, r, _Object$getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\nconst MENU_LABEL_ID = 'user-menu-setting-menu-label';\nconst UserAvatar = props => {\n  const _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isMouseOver = _useState2[0],\n    setIsMouseOver = _useState2[1];\n  const handleMouseOver = useCallback(() => {\n    setIsMouseOver(true);\n  }, []);\n  const handleMouseOut = useCallback(() => {\n    setIsMouseOver(false);\n  }, []);\n  return jsx(\"div\", {\n    onMouseOver: handleMouseOver,\n    onMouseOut: handleMouseOut,\n    children: jsx(Spacings.Inline, {\n      alignItems: \"center\",\n      children: jsx(Avatar, {\n        size: \"m\",\n        gravatarHash: props.gravatarHash,\n        firstName: props.firstName,\n        lastName: props.lastName,\n        isHighlighted: isMouseOver\n      })\n    })\n  });\n};\nUserAvatar.displayName = 'UserAvatar';\nfunction getIsFocusedElementInMenu() {\n  var _document$activeEleme;\n  return Boolean((_document$activeEleme = document.activeElement) === null || _document$activeEleme === void 0 ? void 0 : _document$activeEleme.getAttribute('data-user-settings-menu'));\n}\nconst stateReducer = (state, changes) => {\n  var _ref3;\n  switch (changes.type) {\n    // So in case the user wants to navigate with the tab button\n    // we need to make sure that the menu does not close\n    case Downshift.stateChangeTypes.blurButton:\n      return _objectSpread(_objectSpread({}, changes), {}, {\n        isOpen: (_ref3 = state.isOpen && getIsFocusedElementInMenu()) !== null && _ref3 !== void 0 ? _ref3 : false\n      });\n    default:\n      return changes;\n  }\n};\nconst OptionalFeatureToggle = props => {\n  if (props.featureToggle) {\n    return jsx(ToggleFeature, {\n      flag: props.featureToggle,\n      children: props.children\n    });\n  }\n  return jsx(Fragment, {\n    children: props.children\n  });\n};\nOptionalFeatureToggle.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  featureToggle: _pt.string,\n  children: _pt.node.isRequired\n} : {};\nconst renderLabel = (menu, applicationLanguage) => {\n  var _context;\n  const localizedLabel = _findInstanceProperty(_context = menu.labelAllLocales).call(_context, loc => _startsWithInstanceProperty(applicationLanguage).call(applicationLanguage, loc.locale));\n  if (localizedLabel) return localizedLabel.value;\n  return NO_VALUE_FALLBACK;\n};\nconst MenuItem = /*#__PURE__*/_styled(\"div\", process.env.NODE_ENV === \"production\" ? {\n  target: \"e1al5ftg0\"\n} : {\n  target: \"e1al5ftg0\",\n  label: \"MenuItem\"\n})(\"width:100%;cursor:pointer;color:\", designTokens.colorSolid, \";:hover{background-color:\", designTokens.colorNeutral95, \";}\", props => props.hasDivider === true ? /*#__PURE__*/css(\"border-bottom:1px solid \", designTokens.colorNeutral, \";margin:\", designTokens.spacing10, \" 0;\" + (process.env.NODE_ENV === \"production\" ? \"\" : \";label:MenuItem;\"), process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\") : '', \";\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));\nconst MenuItemLabel = props => jsx(\"div\", {\n  css: /*#__PURE__*/css(\"padding:\", designTokens.spacing20, \" \", designTokens.spacing50, \";\" + (process.env.NODE_ENV === \"production\" ? \"\" : \";label:MenuItemLabel;\"), process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"),\n  children: props.children\n});\nMenuItemLabel.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  children: _pt.node.isRequired\n} : {};\nconst UserSettingsAvatarContainer = props => jsx(\"div\", {\n  css: /*#__PURE__*/css(\"padding:\", designTokens.spacing30, \" \", designTokens.spacing50, \";\" + (process.env.NODE_ENV === \"production\" ? \"\" : \";label:UserSettingsAvatarContainer;\"), process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"),\n  children: props.children\n});\nUserSettingsAvatarContainer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  children: _pt.node.isRequired\n} : {};\nconst getUserSettingsMenuStyles = () => {\n  return /*#__PURE__*/css(\"position:absolute;background:\", designTokens.colorSurface, \";border-radius:\", designTokens.borderRadius2, \";box-shadow:0px 2px 5px 0px rgba(0, 0, 0, 0.15);width:\", designTokens.constraint9, \";right:40px;top:calc(\", DIMENSIONS.header, \" + \", designTokens.spacing20, \");padding:0 0 \", designTokens.spacing10, \" 0;overflow:hidden;\" + (process.env.NODE_ENV === \"production\" ? \"\" : \";label:getUserSettingsMenuStyles;\"), process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");\n};\nvar _ref2 = process.env.NODE_ENV === \"production\" ? {\n  name: \"4zleql\",\n  styles: \"display:block\"\n} : {\n  name: \"1h437nn-getUserSettingsMenuItemLinkStyles\",\n  styles: \"display:block;label:getUserSettingsMenuItemLinkStyles;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\nconst getUserSettingsMenuItemLinkStyles = () => _ref2;\nconst UserSettingsMenuBody = props => {\n  var _context2;\n  // Focus on a menu item when it's opened through keyboard\n  const menuElementRef = useRef(null);\n  useEffect(() => {\n    var _menuElementRef$curre;\n    (_menuElementRef$curre = menuElementRef.current) === null || _menuElementRef$curre === void 0 || _menuElementRef$curre.focus();\n  }, []);\n  const environment = useApplicationContext(context => context.environment);\n  const applicationsAppBarMenu = useApplicationsMenu('appBar', {\n    queryOptions: {\n      onError: reportErrorToSentry\n    },\n    environment\n  });\n  const accountMenuItems = applicationsAppBarMenu !== null && applicationsAppBarMenu !== void 0 ? applicationsAppBarMenu : [];\n  return jsx(\"div\", {\n    onKeyDown: event => {\n      if (event.key === 'Esc' || event.key === 'Tab' && !getIsFocusedElementInMenu()) {\n        props.downshiftProps.closeMenu();\n      }\n    },\n    css: getUserSettingsMenuStyles(),\n    children: jsxs(\"div\", _objectSpread(_objectSpread({}, props.downshiftProps.getMenuProps()), {}, {\n      children: [jsx(UserSettingsAvatarContainer, {\n        children: jsxs(Spacings.Inline, {\n          scale: \"m\",\n          alignItems: \"center\",\n          children: [jsx(Avatar, {\n            size: \"m\",\n            firstName: props.firstName,\n            lastName: props.lastName,\n            gravatarHash: props.gravatarHash\n          }), jsxs(\"div\", {\n            children: [jsx(Text.Subheadline, {\n              as: \"h4\",\n              children: _trimInstanceProperty(_context2 = [props.firstName, props.lastName].join(' ')).call(_context2)\n            }), jsx(Text.Detail, {\n              truncate: true,\n              tone: \"secondary\",\n              children: props.email\n            })]\n          })]\n        })\n      }), accountMenuItems.length > 0 ? jsx(MenuItem, {\n        hasDivider: true\n      }) : null, _mapInstanceProperty(accountMenuItems).call(accountMenuItems, menu => {\n        var _menu$featureToggle;\n        return jsx(OptionalFeatureToggle, {\n          featureToggle: (_menu$featureToggle = menu.featureToggle) !== null && _menu$featureToggle !== void 0 ? _menu$featureToggle : undefined,\n          children: jsx(Link, {\n            css: getUserSettingsMenuItemLinkStyles(),\n            to: \"/account/\".concat(menu.uriPath),\n            onClick: () => props.downshiftProps.toggleMenu(),\n            \"data-user-settings-menu\": true,\n            ref: menuElementRef,\n            children: jsx(MenuItem, {\n              children: jsx(MenuItemLabel, {\n                children: jsx(Text.Body, {\n                  children: renderLabel(menu, props.language)\n                })\n              })\n            })\n          })\n        }, menu.key);\n      }), jsx(MenuItem, {\n        hasDivider: true\n      }), jsx(\"a\", {\n        css: getUserSettingsMenuItemLinkStyles(),\n        href: \"https://commercetools.com/privacy#suppliers\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        onClick: () => props.downshiftProps.toggleMenu(),\n        \"data-user-settings-menu\": true,\n        ref: !applicationsAppBarMenu ? menuElementRef : undefined,\n        children: jsx(MenuItem, {\n          children: jsx(MenuItemLabel, {\n            children: jsx(Text.Body, {\n              intlMessage: messages.privacyPolicy\n            })\n          })\n        })\n      }), jsx(\"a\", {\n        css: getUserSettingsMenuItemLinkStyles(),\n        href: SUPPORT_PORTAL_URL,\n        rel: \"noopener noreferrer\",\n        target: \"_blank\",\n        onClick: () => props.downshiftProps.toggleMenu(),\n        \"data-user-settings-menu\": true,\n        children: jsx(MenuItem, {\n          children: jsx(MenuItemLabel, {\n            children: jsx(Text.Body, {\n              intlMessage: messages.support\n            })\n          })\n        })\n      }), jsx(MenuItem, {\n        hasDivider: true\n      }), jsxs(\"a\", {\n        css: getUserSettingsMenuItemLinkStyles()\n        // NOTE: we want to redirect to a new page so that the\n        // server can remove things like cookie for access token.\n        ,\n        href: \"/logout?reason=\".concat(LOGOUT_REASONS.USER),\n        \"data-test\": \"logout-button\",\n        \"data-user-settings-menu\": true,\n        children: [jsx(MenuItem, {\n          children: jsx(MenuItemLabel, {\n            children: jsx(Text.Body, {\n              intlMessage: messages.logout\n            })\n          })\n        }), jsx(\"div\", {\n          tabIndex: 0,\n          onFocus: () => props.downshiftProps.closeMenu()\n        })]\n      })]\n    }))\n  });\n};\nUserSettingsMenuBody.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  downshiftProps: _pt.any.isRequired\n} : {};\nUserSettingsMenuBody.displayName = 'UserSettingsMenuBody';\nvar _ref = process.env.NODE_ENV === \"production\" ? {\n  name: \"18rc9yp\",\n  styles: \"cursor:pointer;border:none;padding:0;display:flex;background:transparent\"\n} : {\n  name: \"pod1xb-UserSettingsMenu\",\n  styles: \"cursor:pointer;border:none;padding:0;display:flex;background:transparent;label:UserSettingsMenu;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\nconst UserSettingsMenu = props => {\n  const intl = useIntl();\n  return jsxs(\"div\", {\n    \"data-test\": \"user-settings-menu\",\n    children: [jsx(AccessibleHidden, {\n      children: jsx(\"span\", {\n        id: MENU_LABEL_ID,\n        children: jsx(FormattedMessage, _objectSpread({}, messages.menuLabel))\n      })\n    }), jsx(Downshift, {\n      stateReducer: stateReducer,\n      labelId: MENU_LABEL_ID,\n      children: downshiftProps => jsxs(\"div\", {\n        children: [jsx(\"button\", _objectSpread(_objectSpread({\n          css: _ref\n        }, downshiftProps.getToggleButtonProps({\n          'aria-label': intl.formatMessage(downshiftProps.isOpen ? messages.closeMenuLabel : messages.openMenuLabel)\n        })), {}, {\n          children: jsx(UserAvatar, {\n            firstName: props.firstName,\n            lastName: props.lastName,\n            gravatarHash: props.gravatarHash\n          })\n        })), downshiftProps.isOpen && jsx(UserSettingsMenuBody, _objectSpread(_objectSpread({}, props), {}, {\n          downshiftProps: downshiftProps\n        }))]\n      })\n    })]\n  });\n};\nUserSettingsMenu.displayName = 'UserSettingsMenu';\n\nexport { UserAvatar, UserSettingsMenuBody, UserSettingsMenu as default };\n","var createCompounder = require('./_createCompounder'),\n    upperFirst = require('./upperFirst');\n\n/**\n * Converts `string` to\n * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n *\n * @static\n * @memberOf _\n * @since 3.1.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the start cased string.\n * @example\n *\n * _.startCase('--foo-bar--');\n * // => 'Foo Bar'\n *\n * _.startCase('fooBar');\n * // => 'Foo Bar'\n *\n * _.startCase('__FOO_BAR__');\n * // => 'FOO BAR'\n */\nvar startCase = createCompounder(function(result, word, index) {\n  return result + (index ? ' ' : '') + upperFirst(word);\n});\n\nmodule.exports = startCase;\n"],"names":["ownKeys","e","r","t","o","call","enumerable","push","apply","FetchApplicationsMenu","kind","definitions","operation","name","value","variableDefinitions","directives","selectionSet","selections","arguments","loc","start","end","source","body","locationOffset","line","column","defaultApiUrl","window","location","origin","mapLabelAllLocalesWithDefaults","labelAllLocales","defaultLabel","mappedLabelAllLocales","_context","supportedLocale","existingField","field","locale","_objectSpread","length","_context4","_context5","Object","__typename","mapApplicationMenuConfigToGraqhQLQueryResult","applicationConfig","_applicationConfig$__","_ref","_applicationConfig$__2","_menuLinks$featureTog","_menuLinks$menuVisibi","_menuLinks$actionRigh","_menuLinks$dataFences","_context2","entryPointUriPath","menuLinks","__DEVELOPMENT__","accountLinks","applicationsMenu","navBarGroups","key","items","uriPath","icon","permissions","featureToggle","menuVisibility","actionRights","dataFences","submenu","submenuLinks","submenuLink","_context3","_submenuLink$featureT","_submenuLink$menuVisi","_submenuLink$actionRi","_submenuLink$dataFenc","concat","appBar","menuLink","_menuLink$featureTogg","useApplicationsMenu","menuKey","config","_config$queryOptions","apolloClient","mcProxyApiUrl","context","environment","_useState","useState","_useState2","hasWrittenToCache","setHasWrittenToCache","menuQueryResult","skip","servedByProxy","onError","queryOptions","fetchPolicy","uri","skipGraphQlTargetCheck","data","useEffect","applicationMenu","writeQuery","query","fontSizeMap","s","narrow","wide","m","l","widthSizeMap","colorsMap","accent","normal","highlighted","purple","turquoise","brown","getFontSize","avatarInitials","avatarSize","widthCode","getWidthSize","getForegroundColor","avatarColor","getAvatarStyles","avatarProps","size","backgroundColor","undefined","getBackgroundColor","color","isHighlighted","foregroundColor","getFirstChar","str","toUpperCase","createGravatarImgUrl","md5Hash","multiplyBy","imageSize","gravatarSize","replace","GravatarImg","props","css","src","gravatarHash","srcSet","join","alt","displayName","Initials","initialsFromName","_ref$firstName","firstName","_ref$lastName","lastName","getInitialsFromName","children","Avatar","cloneElement","backgroundcolor","propTypes","defaultProps","Avatar$1","messages","support","id","description","defaultMessage","logout","privacyPolicy","menuLabel","openMenuLabel","closeMenuLabel","MENU_LABEL_ID","UserAvatar","isMouseOver","setIsMouseOver","handleMouseOver","useCallback","handleMouseOut","onMouseOver","onMouseOut","alignItems","getIsFocusedElementInMenu","_document$activeEleme","Boolean","document","activeElement","getAttribute","stateReducer","state","changes","_ref3","type","isOpen","OptionalFeatureToggle","flag","renderLabel","menu","applicationLanguage","localizedLabel","MenuItem","target","hasDivider","MenuItemLabel","UserSettingsAvatarContainer","_ref2","styles","getUserSettingsMenuItemLinkStyles","UserSettingsMenuBody","menuElementRef","useRef","_menuElementRef$curre","current","focus","applicationsAppBarMenu","u","accountMenuItems","onKeyDown","event","downshiftProps","closeMenu","D","getMenuProps","scale","as","truncate","tone","email","_menu$featureToggle","to","onClick","toggleMenu","ref","language","href","rel","intlMessage","tabIndex","onFocus","UserSettingsMenu","intl","useIntl","labelId","getToggleButtonProps","formatMessage","createCompounder","upperFirst","startCase","result","word","index","module","exports"],"sourceRoot":""}